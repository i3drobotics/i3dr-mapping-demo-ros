version: '3'
services:

  ros-master:
    image: ros:melodic-ros-core
    command: stdbuf -o L roscore
    runtime: runc
    networks:
      i3drrosnet:
        ipv4_address: ${ROS_MASTER_HOSTNAME}
        aliases:
          - ros-master

  i3dr-stereo-camera-demo-ros:
    image: i3dr/i3dr-stereo-camera-demo-ros:latest
    build:
      context: ../
      dockerfile: docker/stereo-camera-ros/Dockerfile
    depends_on:
      - ros-master
    entrypoint: ['/entry.bash']
    environment:
     - ROS_MASTER_URI=http://ros-master:11311
     - ROS_HOSTNAME=${ROS_STEREO_CAMERA_HOSTNAME}
     - DISPLAY=${DISPLAY_IP}
     - QT_X11_NO_MITSHM=1
     - I3DR_CAMERA_TYPE=${I3DR_CAMERA_TYPE}
     - I3DR_CAMERA_SERIAL=${I3DR_CAMERA_SERIAL}
    volumes:
     - "./licenses:/root/.i3dr/lic:rw"
     - "../.nv:/root/.nv:rw"
     - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    networks:
      i3drrosnet:
        ipv4_address: ${ROS_STEREO_CAMERA_HOSTNAME}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  i3dr-mapping-demo-ros:
    image: i3dr/i3dr-mapping-demo-ros:latest
    build:
      context: ../
      dockerfile: docker/mapping-ros/Dockerfile
    depends_on:
      - ros-master
    entrypoint: ['/entry.bash']
    hostname: ${I3DRSGM_HOSTNAME}
    environment:
     - ROS_MASTER_URI=http://ros-master:11311
     - ROS_HOSTNAME=${ROS_MAPPING_HOSTNAME}
     - HOST_ID=${I3DRSGM_HOST_ID}
     - DISPLAY=${DISPLAY_IP}
     - QT_X11_NO_MITSHM=1
    volumes:
     - "./licenses:/root/.i3dr/lic:rw"
     - "../.nv:/root/.nv:rw"
     - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    networks:
      i3drrosnet:
        ipv4_address: ${ROS_MAPPING_HOSTNAME}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

networks:
  i3drrosnet:
    driver: bridge
    ipam:
      config:
        - subnet: ${ROS_SUBNET}
